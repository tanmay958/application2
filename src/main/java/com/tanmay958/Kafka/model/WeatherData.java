package com.tanmay958.Kafka.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Data;


@JsonIgnoreProperties(ignoreUnknown = true)
@Data
public class WeatherData {
    private Coordinates coord; // Coordinates
    private Weather[] weather; // Weather conditions
    private String base; // Base station
    private Main main; // Main weather data
    private int visibility; // Visibility
    private Wind wind; // Wind data
    private Clouds clouds; // Cloud data
    private Rain rain; // Rain data (optional)
    private Snow snow; // Snow data (optional)
    private long dt; // Timestamp
    private Sys sys; // System data
    private int timezone; // Timezone
    private int id; // City ID
    private String name; // City name

    // Getters for temperature and weather condition
    public double getTemperature() {
        return main != null ? main.getTemp() : 0; // Get temperature
    }

    public double getFeelsLike() {
        return main != null ? main.getFeels_like() : 0; // Get feels-like temperature
    }

    public String getWeatherCondition() {
        return (weather != null && weather.length > 0) ? weather[0].getDescription() : "Unknown"; // Default to "Unknown"
    }

    public String getCity() {
        return name != null ? name : "Unknown"; // Default to "Unknown"
    }

    @Data
    public static class Coordinates {
        private double lon;
        private double lat;
    }

    @Data
    public static class Main {
        private double temp;
        private double feels_like;
        private double temp_min;
        private double temp_max;
        private int pressure;
        private int humidity;
        private int sea_level;
        private int grnd_level;

        // Getter methods will be generated by Lombok
    }

    @Data
    public static class Weather {
        private int id;
        private String main;
        private String description;
        private String icon;

        // Getter methods will be generated by Lombok
    }

    @Data
    public static class Wind {
        private double speed;
        private double deg;
        private double gust; // Optional gust value
    }

    @Data
    public static class Clouds {
        private int all;
    }

    public static class Rain {
        @JsonProperty("1h")
        private Double oneHour; // Optional rainfall in the last hour
    }

    public static class Snow {
        @JsonProperty("1h")
        private Double oneHour; // Optional snowfall in the last hour
    }

    @Data
    public static class Sys {
        private int type;
        private int id;
        private String country;
        private long sunrise;
        private long sunset;
    }
}
